# coding: utf-8

"""
    Clerk Backend API

    The Clerk REST Backend API, meant to be accessed by backend servers. Please see https://clerk.com/docs for more information.  # noqa: E501

    OpenAPI spec version: v1
    Contact: support@clerk.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse2006(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'object': 'str',
        'id': 'str',
        'restricted_to_allowlist': 'bool',
        'from_email_address': 'str',
        'progressive_sign_up': 'bool',
        'enhanced_email_deliverability': 'bool'
    }

    attribute_map = {
        'object': 'object',
        'id': 'id',
        'restricted_to_allowlist': 'restricted_to_allowlist',
        'from_email_address': 'from_email_address',
        'progressive_sign_up': 'progressive_sign_up',
        'enhanced_email_deliverability': 'enhanced_email_deliverability'
    }

    def __init__(self, object=None, id=None, restricted_to_allowlist=None, from_email_address=None, progressive_sign_up=None, enhanced_email_deliverability=None):  # noqa: E501
        """InlineResponse2006 - a model defined in Swagger"""  # noqa: E501
        self._object = None
        self._id = None
        self._restricted_to_allowlist = None
        self._from_email_address = None
        self._progressive_sign_up = None
        self._enhanced_email_deliverability = None
        self.discriminator = None
        if object is not None:
            self.object = object
        if id is not None:
            self.id = id
        if restricted_to_allowlist is not None:
            self.restricted_to_allowlist = restricted_to_allowlist
        if from_email_address is not None:
            self.from_email_address = from_email_address
        if progressive_sign_up is not None:
            self.progressive_sign_up = progressive_sign_up
        if enhanced_email_deliverability is not None:
            self.enhanced_email_deliverability = enhanced_email_deliverability

    @property
    def object(self):
        """Gets the object of this InlineResponse2006.  # noqa: E501

        String representing the object's type. Objects of the same type share the same value.  # noqa: E501

        :return: The object of this InlineResponse2006.  # noqa: E501
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this InlineResponse2006.

        String representing the object's type. Objects of the same type share the same value.  # noqa: E501

        :param object: The object of this InlineResponse2006.  # noqa: E501
        :type: str
        """
        allowed_values = ["instance_settings"]  # noqa: E501
        if object not in allowed_values:
            raise ValueError(
                "Invalid value for `object` ({0}), must be one of {1}"  # noqa: E501
                .format(object, allowed_values)
            )

        self._object = object

    @property
    def id(self):
        """Gets the id of this InlineResponse2006.  # noqa: E501


        :return: The id of this InlineResponse2006.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse2006.


        :param id: The id of this InlineResponse2006.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def restricted_to_allowlist(self):
        """Gets the restricted_to_allowlist of this InlineResponse2006.  # noqa: E501


        :return: The restricted_to_allowlist of this InlineResponse2006.  # noqa: E501
        :rtype: bool
        """
        return self._restricted_to_allowlist

    @restricted_to_allowlist.setter
    def restricted_to_allowlist(self, restricted_to_allowlist):
        """Sets the restricted_to_allowlist of this InlineResponse2006.


        :param restricted_to_allowlist: The restricted_to_allowlist of this InlineResponse2006.  # noqa: E501
        :type: bool
        """

        self._restricted_to_allowlist = restricted_to_allowlist

    @property
    def from_email_address(self):
        """Gets the from_email_address of this InlineResponse2006.  # noqa: E501


        :return: The from_email_address of this InlineResponse2006.  # noqa: E501
        :rtype: str
        """
        return self._from_email_address

    @from_email_address.setter
    def from_email_address(self, from_email_address):
        """Sets the from_email_address of this InlineResponse2006.


        :param from_email_address: The from_email_address of this InlineResponse2006.  # noqa: E501
        :type: str
        """

        self._from_email_address = from_email_address

    @property
    def progressive_sign_up(self):
        """Gets the progressive_sign_up of this InlineResponse2006.  # noqa: E501


        :return: The progressive_sign_up of this InlineResponse2006.  # noqa: E501
        :rtype: bool
        """
        return self._progressive_sign_up

    @progressive_sign_up.setter
    def progressive_sign_up(self, progressive_sign_up):
        """Sets the progressive_sign_up of this InlineResponse2006.


        :param progressive_sign_up: The progressive_sign_up of this InlineResponse2006.  # noqa: E501
        :type: bool
        """

        self._progressive_sign_up = progressive_sign_up

    @property
    def enhanced_email_deliverability(self):
        """Gets the enhanced_email_deliverability of this InlineResponse2006.  # noqa: E501


        :return: The enhanced_email_deliverability of this InlineResponse2006.  # noqa: E501
        :rtype: bool
        """
        return self._enhanced_email_deliverability

    @enhanced_email_deliverability.setter
    def enhanced_email_deliverability(self, enhanced_email_deliverability):
        """Sets the enhanced_email_deliverability of this InlineResponse2006.


        :param enhanced_email_deliverability: The enhanced_email_deliverability of this InlineResponse2006.  # noqa: E501
        :type: bool
        """

        self._enhanced_email_deliverability = enhanced_email_deliverability

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse2006, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2006):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
